{"version":3,"sources":["reportWebVitals.js","Button.js","Random.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","className","light","onClick","Random","useState","color","setColor","useEffect","applyColor","formatColor","ary","join","isLight","reduce","a","b","newColor","document","body","style","background","random","i","push","Math","floor","chooseColor","ReactDOM","render","StrictMode","getElementById"],"mappings":"wMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,OCLDQ,EAAS,SAACC,GACrB,OACE,wBACEC,UAAWD,EAAME,MAAQ,eAAiB,cAC1CC,QAASH,EAAMG,QAFjB,sBC0CWC,EA3CA,WAAO,IAAD,EACOC,mBAAS,CAAC,EAAG,IAAK,MADzB,mBACZC,EADY,KACLC,EADK,KAGnBC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMI,EAAc,SAACC,GACnB,MAAO,OAASA,EAAIC,KAAK,MAAQ,KAG7BC,EAAU,WAEd,OADYP,EACDQ,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAK,KAGjCP,EAAa,WACjB,IAAMQ,EAAWP,EAAYJ,GAC7BY,SAASC,KAAKC,MAAMC,WAAaJ,GAenC,OACE,gCACE,qBAAIhB,UAAWY,IAAY,QAAU,QAArC,2BACiBH,EAAYJ,GAD7B,OAGA,cAAC,EAAD,CAAQJ,MAAOW,IAAWV,QATV,WAClBI,EATkB,WAElB,IADA,IAAMe,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOE,KAAKC,KAAKC,MAAsB,IAAhBD,KAAKH,WAE9B,OAAOA,EAIEK,WC3BbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASa,eAAe,SAM1BzC,M","file":"static/js/main.2796a94f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nexport const Button = (props) => {\n  return (\n    <button\n      className={props.light ? \"light-button\" : \"dark-button\"}\n      onClick={props.onClick}\n    >\n      Refresh\n    </button>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"./Button\";\n\nconst Random = () => {\n  const [color, setColor] = useState([0, 122, 255]);\n\n  useEffect(() => {\n    applyColor();\n  }, [color]);\n\n  const formatColor = (ary) => {\n    return \"rgb(\" + ary.join(\", \") + \")\";\n  };\n\n  const isLight = () => {\n    const rgb = color;\n    return rgb.reduce((a, b) => a + b) < 127 * 3;\n  };\n\n  const applyColor = () => {\n    const newColor = formatColor(color);\n    document.body.style.background = newColor;\n  };\n\n  const chooseColor = () => {\n    const random = [];\n    for (let i = 0; i < 3; i++) {\n      random.push(Math.floor(Math.random() * 256));\n    }\n    return random;\n  };\n\n  const handleClick = () => {\n    setColor(chooseColor());\n  };\n\n  return (\n    <div>\n      <h1 className={isLight() ? \"white\" : \"black\"}>\n        Your color is {formatColor(color)};\n      </h1>\n      <Button light={isLight()} onClick={handleClick} />\n    </div>\n  );\n};\n\nexport default Random;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Random from \"./Random\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Random />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}